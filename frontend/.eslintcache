[{"/Users/Tim/Desktop/podcast/frontend/src/index.js":"1","/Users/Tim/Desktop/podcast/frontend/src/App.js":"2","/Users/Tim/Desktop/podcast/frontend/src/components/Header.js":"3","/Users/Tim/Desktop/podcast/frontend/src/components/Footer.js":"4","/Users/Tim/Desktop/podcast/frontend/src/screens/PodcastScreen.js":"5","/Users/Tim/Desktop/podcast/frontend/src/components/Podcast.js":"6","/Users/Tim/Desktop/podcast/frontend/src/screens/EpisodeScreen.js":"7","/Users/Tim/Desktop/podcast/frontend/src/screens/LoginScreen.js":"8","/Users/Tim/Desktop/podcast/frontend/src/screens/HomeScreen.js":"9","/Users/Tim/Desktop/podcast/frontend/src/store.js":"10","/Users/Tim/Desktop/podcast/frontend/src/reducers/podcastReducers.js":"11","/Users/Tim/Desktop/podcast/frontend/src/constants/podcastsConstants.js":"12","/Users/Tim/Desktop/podcast/frontend/src/actions/podcastsActions.js":"13","/Users/Tim/Desktop/podcast/frontend/src/components/Message.js":"14","/Users/Tim/Desktop/podcast/frontend/src/components/Loader.js":"15","/Users/Tim/Desktop/podcast/frontend/src/reducers/userReducers.js":"16","/Users/Tim/Desktop/podcast/frontend/src/constants/userConstants.js":"17","/Users/Tim/Desktop/podcast/frontend/src/components/FormContainer.js":"18","/Users/Tim/Desktop/podcast/frontend/src/actions/userActions.js":"19","/Users/Tim/Desktop/podcast/frontend/src/screens/PodcastListScreen.js":"20","/Users/Tim/Desktop/podcast/frontend/src/screens/PodcastEditScreen.js":"21"},{"size":313,"mtime":1612179590154,"results":"22","hashOfConfig":"23"},{"size":1146,"mtime":1612339709036,"results":"24","hashOfConfig":"23"},{"size":1644,"mtime":1612353816071,"results":"25","hashOfConfig":"23"},{"size":320,"mtime":1610864128723,"results":"26","hashOfConfig":"23"},{"size":944,"mtime":1612185684812,"results":"27","hashOfConfig":"23"},{"size":559,"mtime":1610877465737,"results":"28","hashOfConfig":"23"},{"size":1245,"mtime":1612186199888,"results":"29","hashOfConfig":"23"},{"size":1828,"mtime":1612204677413,"results":"30","hashOfConfig":"23"},{"size":1405,"mtime":1612362397174,"results":"31","hashOfConfig":"23"},{"size":989,"mtime":1612340631093,"results":"32","hashOfConfig":"23"},{"size":2372,"mtime":1612340672483,"results":"33","hashOfConfig":"23"},{"size":1048,"mtime":1612340418428,"results":"34","hashOfConfig":"23"},{"size":3069,"mtime":1612345612333,"results":"35","hashOfConfig":"23"},{"size":241,"mtime":1612184302744,"results":"36","hashOfConfig":"23"},{"size":350,"mtime":1612184207027,"results":"37","hashOfConfig":"23"},{"size":482,"mtime":1612197593278,"results":"38","hashOfConfig":"23"},{"size":204,"mtime":1612197660902,"results":"39","hashOfConfig":"23"},{"size":311,"mtime":1612200366046,"results":"40","hashOfConfig":"23"},{"size":848,"mtime":1612204608386,"results":"41","hashOfConfig":"23"},{"size":2925,"mtime":1612348544847,"results":"42","hashOfConfig":"23"},{"size":4751,"mtime":1612348863552,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1d5a99x",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},"/Users/Tim/Desktop/podcast/frontend/src/index.js",[],["90","91"],"/Users/Tim/Desktop/podcast/frontend/src/App.js",[],"/Users/Tim/Desktop/podcast/frontend/src/components/Header.js",[],"/Users/Tim/Desktop/podcast/frontend/src/components/Footer.js",[],"/Users/Tim/Desktop/podcast/frontend/src/screens/PodcastScreen.js",[],"/Users/Tim/Desktop/podcast/frontend/src/components/Podcast.js",[],"/Users/Tim/Desktop/podcast/frontend/src/screens/EpisodeScreen.js",[],"/Users/Tim/Desktop/podcast/frontend/src/screens/LoginScreen.js",["92"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login } from '../actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\n\tconst dispatch = useDispatch();\n\n\tconst userLogin = useSelector((state) => state.userLogin);\n\tconst { loading, error, userInfo } = userLogin;\n\n\tconst redirect = location.search ? location.search.split('=')[1] : '/podcasts';\n\n\tuseEffect(() => {\n\t\tif (userInfo) {\n\t\t\thistory.push(redirect);\n\t\t}\n\t}, [history, userInfo, redirect]);\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(login(email, password));\n\t};\n\n\treturn (\n\t\t<FormContainer>\n\t\t\t<br />\n\t\t\t<h1>Sign In</h1>\n\t\t\t<br />\n\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\n\t\t\t{loading && <Loader />}\n\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t<Form.Group controlId=\"email\">\n\t\t\t\t\t<Form.Label>Email Address</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tplaceholder=\"Enter Email\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"password\">\n\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t></Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Button className=\"button\" type=\"submit\" variant=\"primary\">\n\t\t\t\t\tSign In\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</FormContainer>\n\t);\n};\n\nexport default LoginScreen;\n","/Users/Tim/Desktop/podcast/frontend/src/screens/HomeScreen.js",[],"/Users/Tim/Desktop/podcast/frontend/src/store.js",[],"/Users/Tim/Desktop/podcast/frontend/src/reducers/podcastReducers.js",[],"/Users/Tim/Desktop/podcast/frontend/src/constants/podcastsConstants.js",[],"/Users/Tim/Desktop/podcast/frontend/src/actions/podcastsActions.js",[],"/Users/Tim/Desktop/podcast/frontend/src/components/Message.js",[],"/Users/Tim/Desktop/podcast/frontend/src/components/Loader.js",[],"/Users/Tim/Desktop/podcast/frontend/src/reducers/userReducers.js",[],"/Users/Tim/Desktop/podcast/frontend/src/constants/userConstants.js",[],"/Users/Tim/Desktop/podcast/frontend/src/components/FormContainer.js",[],"/Users/Tim/Desktop/podcast/frontend/src/actions/userActions.js",[],"/Users/Tim/Desktop/podcast/frontend/src/screens/PodcastListScreen.js",["93","94"],"import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listPodcasts, deletePodcast, podcastCreate } from '../actions/podcastsActions';\nimport { PODCAST_CREATE_RESET } from '../constants/podcastsConstants';\n\nconst PodcastListScreen = ({ history }) => {\n\tconst dispatch = useDispatch();\n\n\tconst podcastList = useSelector((state) => state.podcastList);\n\tconst { loading, error, podcasts } = podcastList;\n\n\tconst userLogin = useSelector((state) => state.userLogin);\n\tconst { userInfo } = userLogin;\n\n\tconst podcastDelete = useSelector((state) => state.podcastDelete);\n\tconst { loading: loadingDelete, error: errorDelete, success: successDelete } = podcastDelete;\n\n\tconst podcastCreate = useSelector((state) => state.podcastCreate);\n\tconst { loading: loadingCreate, error: errorCreate, success: successCreate, podcast: createdPodcast } = podcastCreate;\n\n\tuseEffect(() => {\n\t\tdispatch({ type: PODCAST_CREATE_RESET });\n\n\t\tif (!userInfo && userInfo.isAdmin) {\n\t\t\thistory.push('/login');\n\t\t}\n\t\tif (successCreate) {\n\t\t\thistory.push(`/admin/podcast/${createdPodcast._id}/edit`);\n\t\t} else {\n\t\t\tdispatch(listPodcasts());\n\t\t}\n\t}, [dispatch, history, userInfo, successDelete, successCreate, createdPodcast]);\n\n\tconst deleteHandler = (id) => {\n\t\tif (window.confirm('Are you sure')) {\n\t\t\tdispatch(deletePodcast(id));\n\t\t}\n\t};\n\n\tconst createPodcastHandler = () => {\n\t\thistory.push(`/admin/podcast/create`);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t<Col>\n\t\t\t\t\t<h1>Podcasts</h1>\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"text-right\">\n\t\t\t\t\t<Button className=\"my-3\" onClick={createPodcastHandler}>\n\t\t\t\t\t\tAdd a podcast\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{/* {loadingDelete && <Loader />} */}\n\t\t\t{errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\t\t\t{loadingCreate && <Loader />}\n\t\t\t{errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\t\t\t{loading ? (\n\t\t\t\t<Loader />\n\t\t\t) : error ? (\n\t\t\t\t<Message variant=\"danger\">{error}</Message>\n\t\t\t) : (\n\t\t\t\t<Table bordered hover responsive className=\"table-sm\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{podcasts.map((podcast) => (\n\t\t\t\t\t\t\t<tr key={podcast._id}>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<strong>{podcast.name}</strong>\n\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<LinkContainer to={`/admin/podcast/${podcast._id}/edit`}>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" className=\"btn-sm\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-edit\"></i>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</LinkContainer>\n\n\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" className=\"btn-sm\" onClick={() => deleteHandler(podcast._id)}>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-trash\"></i>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default PodcastListScreen;\n","/Users/Tim/Desktop/podcast/frontend/src/screens/PodcastEditScreen.js",["95"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Image } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listPodcastDetails, updatePodcast, createPodcast } from '../actions/podcastsActions';\nimport { PODCAST_UPDATE_RESET, PODCAST_CREATE_RESET } from '../constants/podcastsConstants';\n\nconst PodcastEditScreen = ({ match, history }) => {\n\tconst podcastId = match.params.id;\n\n\tconst [name, setName] = useState('name');\n\tconst [description, setDescription] = useState('description');\n\tconst [image, setImage] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [imagePreview, setImagePreview] = useState(null);\n\tconst [uploading, setUploading] = useState(false);\n\n\tconst dispatch = useDispatch();\n\n\tconst isCreatedPodcastMode = match.path.includes('/admin/podcast/create');\n\n\tconst podcastDetails = useSelector((state) => state.podcastDetails);\n\tconst { loading, error, podcast } = podcastDetails;\n\n\tconst podcastUpdate = useSelector((state) => (isCreatedPodcastMode ? state.podcastCreate : state.podcastCreate));\n\tconst { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = podcastUpdate;\n\n\tuseEffect(() => {\n\t\tif (successUpdate) {\n\t\t\tdispatch({ type: isCreatedPodcastMode ? PODCAST_CREATE_RESET : PODCAST_UPDATE_RESET });\n\t\t\thistory.push('/admin/podcastlist');\n\t\t\treturn;\n\t\t}\n\t\tif (isCreatedPodcastMode) return;\n\t\tif (!podcastUpdate.name || podcastUpdate._id !== podcastId) {\n\t\t\tdispatch(listPodcastDetails(podcastId));\n\t\t} else {\n\t\t\tsetName(podcast.name);\n\t\t\tsetDescription(podcast.description);\n\t\t}\n\t}, [dispatch, podcastId, podcast, history, successUpdate, isCreatedPodcastMode]);\n\n\tconst onUploadImage = (e) => {\n\t\tconst file = e.target.files[0];\n\t\tsetImage(file);\n\t\tif (file) {\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onload = (e) => {\n\t\t\t\tsetImagePreview(e.target.result);\n\t\t\t};\n\n\t\t\treader.readAsDataURL(file);\n\t\t} else {\n\t\t\tsetImagePreview(null);\n\t\t}\n\t};\n\n\tconst uploadFileHandler = async () => {\n\t\tif (!image) return '';\n\t\tconst file = image;\n\t\tconst formData = new FormData();\n\t\tformData.append('image', file);\n\t\tsetUploading(true);\n\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst { data } = await axios.post('/api/upload', formData, config);\n\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tsetUploading(false);\n\t\t\tthrow new Error('There was a problem');\n\t\t}\n\t};\n\n\tconst submitHandler = async (e) => {\n\t\te.preventDefault();\n\t\tlet finalImage = imageUrl;\n\t\tif (!finalImage && image) {\n\t\t\tfinalImage = await uploadFileHandler();\n\t\t}\n\n\t\tconst payload = {\n\t\t\t_id: podcastId,\n\t\t\tname,\n\t\t\tdescription,\n\t\t\t...(finalImage && { image: finalImage })\n\t\t};\n\n\t\tdispatch(isCreatedPodcastMode ? createPodcast(payload) : updatePodcast(payload));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Link to=\"/admin/podcastlist\" className=\"btn btn-light my-3\">\n\t\t\t\tGo Back\n\t\t\t</Link>\n\n\t\t\t<FormContainer>\n\t\t\t\t<h1>{isCreatedPodcastMode ? 'Create Podcast' : 'Edit Podcast'}</h1>\n\t\t\t\t{loadingUpdate && <Loader />}\n\t\t\t\t{errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : error ? (\n\t\t\t\t\t<Message variant=\"danger\">{error}</Message>\n\t\t\t\t) : (\n\t\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t\t<Form.Group controlId=\"name\">\n\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter name\"\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group controlId=\"image\">\n\t\t\t\t\t\t\t<Form.Label>Image</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter image url\"\n\t\t\t\t\t\t\t\tvalue={imageUrl}\n\t\t\t\t\t\t\t\tonChange={(e) => setImageUrl(e.target.value)}\n\t\t\t\t\t\t\t></Form.Control>\n\n\t\t\t\t\t\t\t<Form.File id=\"image-file\" label=\"Choose File\" custom onChange={onUploadImage}></Form.File>\n\t\t\t\t\t\t\t{uploading && <Loader />}\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t{imagePreview ? <Image src={imagePreview} fluid /> : null}\n\n\t\t\t\t\t\t<Form.Group controlId=\"description\">\n\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter description\"\n\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\n\t\t\t\t\t\t\t{isCreatedPodcastMode ? 'Create' : 'Update'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</FormContainer>\n\t\t</>\n\t);\n};\n\nexport default PodcastEditScreen;\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"100","severity":1,"message":"104","line":7,"column":39,"nodeType":"102","messageId":"103","endLine":7,"endColumn":52},{"ruleId":"100","severity":1,"message":"105","line":20,"column":19,"nodeType":"102","messageId":"103","endLine":20,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":45,"column":5,"nodeType":"108","endLine":45,"endColumn":81,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'podcastCreate' is defined but never used.","'loadingDelete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'podcastUpdate._id' and 'podcastUpdate.name'. Either include them or remove the dependency array.","ArrayExpression",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch, podcastId, podcast, history, successUpdate, isCreatedPodcastMode, podcastUpdate.name, podcastUpdate._id]",{"range":"115","text":"116"},[1821,1897],"[dispatch, podcastId, podcast, history, successUpdate, isCreatedPodcastMode, podcastUpdate.name, podcastUpdate._id]"]